name: Build and Test Components

on:
  pull_request:
    branches:
      - main
      - 'release/**'
  push:
    branches:
      - main
      - 'release/**'

  workflow_dispatch:
  workflow_call:

env:
  GO_VERSION: '1.24'

jobs:  
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check licenses
        run: make ci-check-licenses
      - name: Check that the release version is synced across the repo
        run: |
          make prepare-release version=$(grep -oP '(?<=const Version = ")[^"]+' "./pkg/version/version.go")
          git diff --exit-code
      
  build_and_test_linux:
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Tests
        run: |
          find . -name go.mod -execdir go test -v ./... \; | (! grep FAIL)

  build_and_test_windows:
    runs-on: windows-latest
    needs: checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Tests
        run: |
          find . -name go.mod -execdir go test -v ./... \; | (! grep FAIL)
        
  build_and_test_darwin_arm64:
    runs-on: macos-13-arm64
    needs: checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Tests
        run: |
          find . -name go.mod -execdir go test -v ./... \; | (! grep FAIL)