name: Release Components

on:
  push:
    paths:
      - 'pkg/version/version.go'
    branches:
      - main
      - 'release/**'

  workflow_dispatch:

jobs:
  release_checks:
    name: Release Checks
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: Get Current Version
        id: get-version
        run: echo "version=$(grep -oP '(?<=const Version = ")[^"]+' "./pkg/version/version.go")" >> $GITHUB_OUTPUT
      - name: Verify that release does not already exist
        env:
          # for gh cli
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make validate-release-uniqueness tag=v${{ steps.get-version.outputs.version }}
        
  govulncheck-modules: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: Go vulnerabilities check
        run: |
          make ci-vulncheck-modules 2>&1

  build_and_test:
    name: Build and Test
    permissions:
      contents: read
    uses: ./.github/workflows/buildAndTest.yml
    secrets: inherit

  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Create GitHub Release
    needs:
      - release_checks
      - build_and_test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 0

      - name: Find Previous Tag
        run: |
          PREVIOUS_TAG=$(make get-previous-tag)
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        env:
          # for gh cli
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make create-github-release current_tag=v${{ needs.release_checks.outputs.version }} previous_tag=${{ env.PREVIOUS_TAG }}
      - name: Tag Go packages on GitHub
        run: |
          FOLDERS="./exporter ./extension ./pkg ./receiver ./connector ./processor ./internal"
          EXCLUDED_FOLDERS="./internal/tools/"
          make tag-github-packages folders="$FOLDERS" tag=v${{ needs.release_checks.outputs.version }} excluded_folders="$EXCLUDED_FOLDERS"
